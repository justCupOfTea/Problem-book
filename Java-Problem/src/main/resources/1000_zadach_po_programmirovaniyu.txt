 Министерство образования и науки Российской Федерации
     Государственное образовательное учреждение
 профессионального образования Российской Федерации
      «Ростовский государственный университет»




               М. Э. Абрамян


              1000 ЗАДАЧ
ПО ПРОГРАММИРОВАНИЮ

                      Часть I
            Скалярные типы данных,
            управляющие операторы,
             процедуры и функции
Методические указания для студентов механико-математического,
         физического и экономического факультетов




                       Ростов-на-Дону
                            2004
                           Печатается по решению
                 кафедры алгебры и дискретной математики
                 механико-математического факультета РГУ
                     от 14 июня 2004 г. (протокол № 10)




                                Рецензенты:
                      к. ф.-м. н., доцент Столяр А. М.,
                       к. ф.-м. н., доцент Чечин Г. М.,
                          ст. преп. Мачулина Л. А.




                               Аннотация

    Первая часть сборника учебных заданий по программированию содержит
задания начального уровня, посвященные скалярным типам данных, управ-
ляющим операторам и разработке процедур и функций с числовыми парамет-
рами.
    Задания формулируются таким образом, что их можно использовать при
изучении любого из распространенных языков программирования, в частности,
Pascal, C++, Basic.
    Сборник предназначен для студентов механико-математического, физиче-
ского и экономического факультетов.
    Автор: М. Э. Абрамян.




                                                          © М. Э. Абрамян, 2004
                                    3




                            Предисловие
     Данные методические указания содержат формулировки 1000 учебных за-
даний, охватывающих все темы базового курса программирования: от скаляр-
ных типов и управляющих операторов до составных структур данных, рекур-
сивных алгоритмов и указателей.
     Задания составлены с учетом опыта проведения практических занятий по
программированию на механико-математическом факультете Ростовского го-
сударственного университета, а также на открытом факультете РГУ (компью-
терные курсы для старшеклассников). При разработке заданий были использо-
ваны материалы пособий [1–10] (список литературы приводится в третьей, за-
ключительной части указаний).
     Задания ориентированы на языки, традиционно используемые при началь-
ном обучении программированию: Pascal, С++, Basic. Вместе с тем, для реше-
ния большей части заданий можно применять и другие языки, например, For-
tran или Java. При формулировке заданий не используются понятия и имена,
специфические для конкретного языка программирования.
     Имеется 18 групп заданий, каждая из которых снабжена особым именем
(нумерация заданий является независимой в каждой группе):
     • «Ввод и вывод данных, оператор присваивания» (группа Begin,
       40 заданий);
     • «Целые числа» (группа Integer, 30 заданий);
     • «Логические выражения» (группа Boolean, 40 заданий);
     • «Условный оператор» (группа If, 30 заданий);
     • «Оператор выбора» (группа Case, 20 заданий);
     • «Цикл с параметром» (группа For, 40 заданий);
     • «Цикл с условием» (группа While, 30 заданий);
     • «Последовательности» (группа Series, 40 заданий);
     • «Процедуры и функции» (группа Proc, 60 заданий);
     • «Минимумы и максимумы» (группа Minmax, 30 заданий);
     • «Одномерные массивы» (группа Array, 140 заданий);
     • «Двумерные массивы (матрицы)» (группа Matrix, 100 заданий);
     • «Символы и строки» (группа String, 70 заданий);
     • «Двоичные (типизированные) файлы» (группа File, 90 заданий);
     • «Текстовые файлы» (группа Text, 60 заданий);
                                      4


     • «Составные типы данных в процедурах и функциях» (группа Param,
       70 заданий);
     • «Рекурсия» (группа Recur, 30 заданий);
     • «Указатели и динамические структуры данных» (группа Dynamic,
       80 заданий).
     Из-за большого объема задачник разбит на три части. Первая часть содер-
жит задания начального уровня, посвященные скалярным типам данных, управ-
ляющим операторам и разработке процедур и функций с числовыми парамет-
рами (от группы Begin до группы Proc включительно); вторая и третья части
содержат задания второй ступени, связанные, в основном, с изучением состав-
ных типов данных (вторая часть содержит задания групп Minmax, Array,
Matrix, String, File, а третья — задания оставшихся групп: Text, Param, Recur,
Dynamic).
     Для более эффективной организации практикума по программированию
автором разработан электронный задачник Programming Taskbook, вклю-
чающий все задания, приведенные в данных методических указаниях.
     Задачник Programming Taskbook предоставляет учащимся следующие
возможности:
     • отображение на экране текста задания и связанных с ним данных;
     • демонстрация правильных результатов для каждого задания;
     • предоставление исходных данных программе учащегося;
     • дополнительный контроль за операциями ввода-вывода;
     • проверка правильности результатов, полученных программой;
     • запись в особый файл результатов информации о каждом тестовом ис-
       пытании программы;
     • регистрация задания как выполненного после надлежащего количества
       успешных тестовых испытаний программы, проведенных подряд.
     Важной особенностью электронного задачника Programming Taskbook
является его независимость от конкретного языка и системы программирова-
ния. Его версия 4.1 (последняя на момент опубликования данных указаний) по-
зволяет выполнять задания в системах Borland Pascal 7.0 (для DOS), Borland
Delphi 3.0–7.0, Borland C++Builder 4.0–5.0, Microsoft Visual C++ 6.0, Visual
Basic 5.0–6.0 (без группы Dynamic, поскольку в языке Basic нет указателей).
Кроме того, задачник может использоваться совместно с учебной системой
программирования Pascal ABC, разработанной С. С. Михалковичем (см. [11]).
     Использование электронного задачника существенно ускоряет процесс
выполнения заданий, так как избавляет учащегося от дополнительных усилий
по организации ввода-вывода, что особенно удобно при обработке массивов,
строк, файлов и динамических структур. Предоставляя учащемуся готовые ис-
ходные данные, задачник акцентирует его внимание на разработке и программ-
                                      5


ной реализации алгоритма решения задания, причем разнообразие исходных
данных обеспечивает надежное тестирование предложенного алгоритма.
     Получить электронный задачник Programming Taskbook можно у его ав-
тора, обратившись по адресу mabr@math.rsu.ru. Дополнительная инфор-
мация о задачнике содержится на веб-сайте
     http://ptaskbook.com
     Подробное описание порядка выполнения заданий с использованием вари-
анта задачника Programming Taskbook для языка Pascal приводится в книгах
[11, 12]. Эти книги содержат также указания к выполнению заданий и решения
некоторых заданий. В данных методических указаниях формулировки решен-
ных заданий помечены символом «º»; решения заданий начального уровня сле-
дует искать в книге [11], а заданий второй ступени — в книге [12].

    1     Обзор групп заданий
     Две первые группы заданий знакомят с числовыми типами данных и опе-
рациями над ними. В первой группе (Begin) основное внимание уделяется вво-
ду-выводу и работе с переменными; в ней используется только данные вещест-
венного типа. Во второй группе (Integer) рассматривается целый тип и особен-
ности его использования, в частности, операции деления нацело и взятия остат-
ка от деления.
     Далее следуют группы заданий, посвященные управляющим конструкциям
языка: Boolean (логические выражения), If (условный оператор), Case (опера-
тор выбора), For (цикл с параметром), While (циклы с условием). Приведенный
порядок их изучения не является единственно возможным. Например, в языках
Pascal и Basic синтаксис цикла с параметром не требует использования логиче-
ских выражений, поэтому группу For можно рассмотреть первой, и только по-
сле этого перейти к логическим выражениям и условным операторам (такой
подход используется в книге [11]). Следует заметить, что задания группы While
подобраны таким образом, что при их выполнении не требуется использовать
условные операторы. Поэтому после знакомства с логическими выражениями
(группа Boolean) можно сразу перейти к использованию логических выраже-
ний в циклах (группа While) и лишь после этого рассмотреть разветвляющиеся
конструкции (группы If и Case). Возможен также подход, при котором логиче-
ские выражения и условные операторы изучаются совместно в группе If, после
чего вводится понятие логического типа данных и рассматриваются задания
группы Boolean. Рассмотрение заключительной части заданий группы For, по-
священной вложенным циклам, может быть отложено до знакомства с обработ-
кой числовых последовательностей (группа Series); в этом случае задания на
вложенные циклы из группы For следует рассмотреть непосредственно перед
аналогичными заданиями группы Series.
                                     6


     Следующие две группы заданий — Series (последовательности) и Proc
(процедуры и функции) — могут рассматриваться в любом порядке. Целью за-
даний группы Series является ознакомление с совместным использованием
различных управляющих конструкций в алгоритмах обработки числовых по-
следовательностей, в то время как цель заданий группы Proc — научить «обер-
тывать» различные алгоритмы в «оболочку» процедуры или функции (поэтому
многие задания группы Proc являются простой переформулировкой заданий из
предыдущих групп на «процедурном» языке).
     Группа Minmax является естественным продолжением группы Series: в
ней также рассматриваются алгоритмы обработки числовых последовательно-
стей, однако в данной группе все эти алгоритмы связаны с нахождением экс-
тремальных элементов последовательностей: минимумов и максимумов, в том
числе условных. Следует подчеркнуть, что все задания групп Series и Minmax
могут быть решены за однократный просмотр исходных данных, поэтому для
их решения не требуется использовать массивы. В то же время, применение
массивов делает решение некоторых заданий из этих групп существенно более
простым, поэтому можно отложить рассмотрение таких заданий до изучения
темы «Массивы» и выполнять их совместно с заданиями группы Array.
     Группы заданий на составные типы данных — Array (одномерные масси-
вы), Matrix (двумерные массивы), String (текстовые строки), File (двоичные
файлы), Text (текстовые файлы) — должны выполняться в указанном порядке.
Разделы «Серии целых чисел» и «Множества точек на плоскости» являются до-
полнительными для группы Array; раздел «Использование файлов для работы с
матрицами» является дополнительным для группы File.
     Задания группы Param посвящены использованию составных типов дан-
ных в процедурах и функциях. К этим заданиям можно перейти после рассмот-
рения всех предыдущих групп; можно также включить их в изучение соответ-
ствующей темы, рассмотрев раздел «Массивы» группы Param совместно с
группами Array и Matrix, раздел «Строки» — с группой String, а раздел «Фай-
лы» — с группами File и Text. Задания из раздела «Записи» полезно сравнить с
аналогичными заданиями из дополнительного раздела группы Proc; это позво-
лит подчеркнуть преимущества использования новых типов данных.
     Группы заданий Recur (рекурсивные алгоритмы) и Dynamic (указатели и
динамические структуры данных) могут рассматриваться в любом порядке. Ра-
зумеется, группа Dynamic не может использоваться при изучении языка про-
граммирования Basic, так как в нем отсутствуют указатели.
     Заметим, что выполнение заданий на разработку процедур и функций для
работы со стеками, очередями и списками (см. задания группы Dynamic с но-
мерами 11–13, 26–28, 59–69 и 74–80) естественно подводит к созданию соот-
ветствующих модулей и классов и рассмотрению различных аспектов модуль-
ного и объектно-ориентированного программирования.
                                     7



    2    Общие замечания о формулировках заданий
    Числовые типы данных
    Если о типе исходных или результирующих числовых данных в задании
ничего не сказано, то предполагаются вещественные данные. Исключение со-
ставляет группа заданий Dynamic, в которой все числовые данные считаются
целыми, и в формулировках заданий это особо не оговаривается.
    При обработке наборов вещественных чисел всюду предполагается, что все
элементы набора являются различными; в частности, считается, что любой на-
бор вещественных чисел содержит единственный минимальный и единствен-
ный максимальный элемент. В этом состоит основное отличие наборов вещест-
венных чисел от наборов целых чисел, в которых могут присутствовать одина-
ковые элементы. Разумеется, при вводе исходных вещественных данных с кла-
виатуры можно добиться того, что какие-либо вещественные данные окажутся
одинаковыми, однако в этой ситуации многие задания на обработку наборов
вещественных данных окажутся некорректно сформулированными.
    Для того, чтобы элементы наборов вещественных чисел были различными,
можно использовать датчик случайных чисел. Именно так организована гене-
рация исходных данных в электронном задачнике Programming Taskbook.
    Процедуры и функции
    Если в используемом языке программирования отсутствует понятие «про-
цедура», то под процедурой в формулировках заданий групп Proc, Param и
Dynamic надо понимать функцию, не имеющую возвращаемого значения (на-
пример, в C++ под процедурами надо понимать функции, возвращающие зна-
чение типа void).
     Массивы
     Если в задании не указан максимальный размер исходных массивов, то его
можно считать равным 10 для одномерных и 10 × 10 для двумерных массивов.
     При описании элементов одномерных и двумерных массивов используется
понятие порядкового номера элемента, причем начальный элемент массива A
размера N всегда имеет порядковый номер 1 и обозначается в формулировках
заданий как A1, а конечный элемент этого же массива имеет порядковый номер
N и обозначается как AN. Аналогично, начальный элемент двумерного массива
B обозначается как B1,1. Кроме того, понятие порядкового номера применяется
к строкам и столбцам двумерных массивов (матриц): начальная строка и на-
чальный столбец матрицы размера M × N имеют порядковый номер 1, конечная
строка — номер M, а конечный столбец — номер N. Подобный подход не зави-
сит от выбора языка программирования и соответствует традиции, принятой в
математике для нумерации элементов векторов и матриц.
                                     8


    Важно учитывать, что в некоторых языках программирования индексы
элементов массивов могут отличаться от их порядковых номеров. В частности,
индексация элементов массивов в языке C++ всегда начинается с нуля, поэтому
элемент массива A с порядковым номером 1 (то есть первый элемент массива A,
обозначаемый в формулировке заданий как A1) в языке C++ имеет индекс 0
и обозначается в программе как A[0]. Аналогично, первый элемент мат-
рицы B (находящийся в ее первой строке и первом столбце и обозначаемый в
формулировке задания как B1,1) в программе на C++ должен обозначаться как
B[0][0].
    В языках Pascal и Basic подобной проблемы не возникает, так как в них
имеется возможность явного указания нижней границы диапазона индексов,
равной 1; при этом индекс любого элемента массива будет совпадать с его по-
рядковым номером.
    Кроме того, в языке Basic можно использовать оператор задания по умол-
чанию нижней границы диапазона индексов, равной 1:
        Option Base 1
    В тех языках, в которых нижний индекс массива жестко задан и равен ну-
лю (например, С++), можно просто «игнорировать» элемент массива с индек-
сом 0. Например, массив A размера 10 можно описать как массив, состоящий из
11 элементов, а данные в него вводить, начиная с элемента A[1]. При этом
элемент A[0] оказывается «невостребованным» (хотя в некоторых алгоритмах
он может пригодится в качестве вспомогательного «барьерного» элемента).
Впрочем, для того, чтобы не нарушать стиль программирования, принятый в
языках с жестко заданной нижней границей индексов, можно «примириться» с
несогласованностью индексов и порядковых номеров элементов массивов и
учитывать эту несогласованность при программной реализации алгоритмов.
     Символы и строки
     В языке Basic отсутствует символьный тип, поэтому для обработки симво-
лов надо использовать строковые переменные единичной длины: String*1.
     В языке C++ для работы со строками традиционно используется тип
char*, однако предпочтительнее использовать класс string из стандартной
библиотеки.
     Файлы
     При изучении файлов вначале рассматриваются двоичные файлы (группа
File), а затем — текстовые (группа Text).
     Под двоичным файлом понимается файл, содержащий элементы одного
типа в специальном формате. В языке Pascal такие файлы называются типизи-
рованными и описываются как file of <тип элемента>; в языке Basic —
это файлы прямого доступа, описываемые с помощью атрибута Random. В
                                      9


языке C++ для работы с двоичными файлами надо открывать их в режиме
ios_base::binary; для чтения и записи элементов двоичных файлов в этом
языке надо использовать методы read и write со списком параметров вида
((char *)&x, sizeof(x)), где x — переменная, тип которой совпадает с
типом элементов двоичного файла.
     Отдельный раздел в группе File посвящен обработке двоичных нетипизи-
рованных файлов, для которых неизвестен тип входящих в них элементов (см.
задания File42–File47). Для обработки таких файлов их можно рассматривать
как последовательности байтов и побайтно их обрабатывать, считывая и запи-
сывая данные по одному байту за одну операцию ввода–вывода (в языке Basic
для работы с такими файлами предусмотрен режим Binary). В языке Pascal
для обработки нетипизированных файлов эффективнее использовать тип file
и специальные процедуры ввода–вывода BlockRead–BlockWrite.
     Текстовые файлы представляют собой последовательности строк различ-
ной длины, разделенные маркерами конца строки EOLN. В языке Pascal тексто-
вые файлы описываются как Text, в языке Basic — как файлы последователь-
ного доступа, открываемые в режиме Input, Output или Append. В языке
C++ файлы по умолчанию открываются именно как текстовые.
     В группе File имеется специальный раздел, посвященный строковым фай-
лам. Строковые файлы являются частным случаем двоичных файлов; в отли-
чие от текстовых файлов, для хранения строк в них выделяются участки памяти
одинакового размера. Это позволяет использовать для обработки строковых
файлов методы прямого доступа, однако делает невозможным их просмотр и
редактирование в обычных текстовых редакторах. В языке Pascal строковые
файлы описываются как file of string (в Borland Delphi необходимо ис-
пользовать описание file of ShortString). В языке Basic строковые фай-
лы надо описывать как файлы прямого доступа (открытые в режиме Random) с
элементами-строками фиксированного размера, например, String*80. В язы-
ке C++ строковые файлы, как любые двоичные файлы, должны открываться в
режиме ios_base::binary и иметь в качестве элементов строки фиксиро-
ванного размера, например, char[80].
     Под размером двоичного типизированного файла всегда подразумевается
количество содержащихся в нем элементов указанного типа (а не количество
байтов, как это принято в операционной системе). Как и для элементов массива,
для элементов файла в формулировках заданий применяется «естественная»
нумерация: первый элемент файла имеет порядковый номер 1. Это следует учи-
тывать при организации перемещения к элементу с требуемым номером; в ча-
стности, в языке Pascal для перехода к K-му элементу файла F необходимо вы-
звать процедуру Seek(F, K–1).
                                      10


     Максимальный размер исходных файлов не указывается, поэтому при ре-
шении заданий на файлы не следует использовать вспомогательные массивы,
содержащие все элементы исходных файлов, однако допускается использова-
ние вспомогательных файлов. Все исходные файлы считаются существующими
и непустыми, за исключением специально оговоренных случаев (см., например,
задания File4, File5, File9), в которых существование исходных файлов требует-
ся проверять в ходе выполнения задания.
     Если при выполнении заданий не используется электронный задачник
Programming Taskbook, то следует позаботиться о генерации исходных фай-
лов, а также о наглядном выводе содержимого результирующих двоичных фай-
лов. Для этих целей целесообразно применять специальные процедуры, кото-
рые может разработать либо преподаватель, либо сами учащиеся.
     Указатели
     В заданиях этой группы используется особые типы данных: записи типа
TNode и указатели на них типа PNode. Описание этих типов на языках Pascal и
C++ приводится в начале раздела «Указатели». При использовании электронно-
го задачника Programming Taskbook эти типы не следует описывать в про-
грамме учащегося, так как они уже описаны в модулях задачника, подключае-
мых к программе.
     Для нулевого указателя в формулировках заданий используется обозначе-
ние nil, заимствованное из языка Pascal.
     Если при выполнении заданий не используется электронный задачник
Programming Taskbook, то следует позаботиться о подготовке тестовых дина-
мических структур (и размещении их в динамической памяти в начале работы
программы), а также о наглядном выводе содержимого результирующих струк-
тур. Здесь, как и в случае с файлами, могут оказаться полезными специальные
процедуры, разработанные либо преподавателем, либо самими учащимися.

    3     Ввод и вывод данных, оператор присваивания:
          группа Begin
    Все входные и выходные данные в заданиях этой группы являются веще-
ственными числами.
Begin1. Дана сторона квадрата a. Найти его периметр P = 4·a.
Begin2. Дана сторона квадрата a. Найти его площадь S = a2.
Begin3°. Даны стороны прямоугольника a и b. Найти его площадь S = a·b и
    периметр P = 2·(a + b).
Begin4. Дан диаметр окружности d. Найти ее длину L = π·d. В качестве значе-
    ния π использовать 3.14.
                                     11


Begin5. Дана длина ребра куба a. Найти объем куба V = a3 и площадь его по-
    верхности S = 6·a2.
Begin6. Даны длины ребер a, b, c прямоугольного параллелепипеда. Найти его
    объем V = a·b·c и площадь поверхности S = 2·(a·b + b·c + a·c).
Begin7°. Найти длину окружности L и площадь круга S заданного радиуса R:
                               L = 2·π·R,   S = π·R2.
    В качестве значения π использовать 3.14.
Begin8. Даны два числа a и b. Найти их среднее арифметическое: (a + b)/2.
Begin9. Даны два неотрицательных числа a и b. Найти их среднее геометриче-
    ское, то есть квадратный корень из их произведения: a ⋅ b .
Begin10. Даны два ненулевых числа. Найти сумму, разность, произведение и
    частное их квадратов.
Begin11. Даны два ненулевых числа. Найти сумму, разность, произведение и
    частное их модулей.
Begin12. Даны катеты прямоугольного треугольника a и b. Найти его гипоте-
    нузу c и периметр P:
                               c = a 2 + b2 ,     P = a + b + c.
Begin13. Даны два круга с общим центром и радиусами R1 и R2 (R1 > R2). Найти
    площади этих кругов S1 и S2, а также площадь S3 кольца, внешний радиус
    которого равен R1, а внутренний радиус равен R2:
                        S1 = π·(R1)2,    S2 = π·(R2)2,    S3 = S1 – S2.
    В качестве значения π использовать 3.14.
Begin14. Дана длина L окружности. Найти ее радиус R и площадь S круга, ог-
    раниченного этой окружностью, учитывая, что L = 2·π·R, S = π·R2. В ка-
    честве значения π использовать 3.14.
Begin15. Дана площадь S круга. Найти его диаметр D и длину L окружности,
    ограничивающей этот круг, учитывая, что L = π·D, S = π·D2/4. В качестве
    значения π использовать 3.14.
Begin16. Найти расстояние между двумя точками с заданными координатами
    x1 и x2 на числовой оси: |x2 – x1|.
Begin17. Даны три точки A, B, C на числовой оси. Найти длины отрезков AC
    и BC и их сумму.
Begin18. Даны три точки A, B, C на числовой оси. Точка C расположена между
    точками A и B. Найти произведение длин отрезков AC и BC.
Begin19. Даны координаты двух противоположных вершин прямоугольника:
    (x1, y1), (x2, y2). Стороны прямоугольника параллельны осям координат.
    Найти периметр и площадь данного прямоугольника.
                                          12


Begin20. Найти расстояние между двумя точками с заданными координатами
    (x1, y1) и (x2, y2) на плоскости. Расстояние вычисляется по формуле
                                 ( x2 − x1 ) 2 + ( y2 − y1 ) 2 .
Begin21. Даны координаты трех вершин треугольника: (x1, y1), (x2, y2), (x3, y3).
    Найти его периметр и площадь, используя формулу для расстояния между
    двумя точками на плоскости (см. задание Begin20). Для нахождения пло-
    щади треугольника со сторонами a, b, c использовать формулу Герона:
                             S = p ⋅ ( p − a ) ⋅ ( p − b) ⋅ ( p − c),
    где p = (a + b + c)/2 — полупериметр.
Begin22°. Поменять местами содержимое переменных A и B и вывести новые
    значения A и B.
Begin23. Даны переменные A, B, C. Изменить их значения, переместив содер-
    жимое A в B, B — в C, C — в A, и вывести новые значения переменных A,
    B, C.
Begin24. Даны переменные A, B, C. Изменить их значения, переместив содер-
    жимое A в C, C — в B, B — в A, и вывести новые значения переменных A,
    B, C.
Begin25. Найти значение функции y = 3·x6 – 6·x2 – 7 при данном значении x.
Begin26. Найти значение функции y = 4·(x–3)6 – 7·(x–3)3 + 2 при данном значе-
    нии x.
Begin27°. Дано число A. Вычислить A8, используя вспомогательную перемен-
    ную и три операции умножения. Для этого последовательно находить A2,
    A4, A8. Вывести все найденные степени числа A.
Begin28. Дано число A. Вычислить A15, используя две вспомогательные пере-
    менные и пять операций умножения. Для этого последовательно находить
    A2, A3, A5, A10, A15. Вывести все найденные степени числа A.
Begin29. Дано значение угла α в градусах (0 < α < 360). Определить значение
    этого же угла в радианах, учитывая, что 180° = π радианов. В качестве зна-
    чения π использовать 3.14.
Begin30. Дано значение угла α в радианах (0 < α < 2·π). Определить значение
    этого же угла в градусах, учитывая, что 180° = π радианов. В качестве зна-
    чения π использовать 3.14.
Begin31. Дано значение температуры T в градусах Фаренгейта. Определить
    значение этой же температуры в градусах Цельсия. Температура по Цель-
    сию TC и температура по Фаренгейту TF связаны следующим соотношени-
    ем:
                                    TC = (TF – 32)·5/9.
                                     13


Begin32. Дано значение температуры T в градусах Цельсия. Определить значе-
    ние этой же температуры в градусах Фаренгейта. Температура по Цельсию
    TC и температура по Фаренгейту TF связаны следующим соотношением:
                                   TC = (TF – 32)·5/9.
Begin33. Известно, что X кг конфет стоит A рублей. Определить, сколько стоит
    1 кг и Y кг этих же конфет.
Begin34. Известно, что X кг шоколадных конфет стоит A рублей, а Y кг ирисок
    стоит B рублей. Определить, сколько стоит 1 кг шоколадных конфет, 1 кг
    ирисок, а также во сколько раз шоколадные конфеты дороже ирисок.
Begin35. Скорость лодки в стоячей воде V км/ч, скорость течения реки U км/ч
    (U < V). Время движения лодки по озеру T1 ч, а по реке (против течения) —
    T2 ч. Определить путь S, пройденный лодкой (путь = время · скорость).
    Учесть, что при движении против течения скорость лодки уменьшается на
    величину скорости течения.
Begin36. Скорость первого автомобиля V1 км/ч, второго — V2 км/ч, расстояние
    между ними S км. Определить расстояние между ними через T часов, если
    автомобили удаляются друг от друга. Данное расстояние равно сумме на-
    чального расстояния и общего пути, проделанного автомобилями; общий
    путь = время · суммарная скорость.
Begin37. Скорость первого автомобиля V1 км/ч, второго — V2 км/ч, расстояние
    между ними S км. Определить расстояние между ними через T часов, если
    автомобили первоначально движутся навстречу друг другу. Данное рас-
    стояние равно модулю разности начального расстояния и общего пути,
    проделанного автомобилями; общий путь = время · суммарная скорость.
Begin38. Решить линейное уравнение A·x + B = 0, заданное своими коэффици-
    ентами A и B (коэффициент A не равен 0).
Begin39. Найти корни квадратного уравнения A·x2 + B·x + C = 0, заданного
    своими коэффициентами A, B, C (коэффициент A не равен 0), если извест-
    но, что дискриминант уравнения положителен. Вывести вначале меньший,
    а затем больший из найденных корней. Корни квадратного уравнения на-
    ходятся по формуле x1,2 = (− B ± D ) / (2·A), где D — дискриминант, рав-
    ный B2 – 4·A·C.
Begin40. Найти решение системы линейных уравнений вида
                                    A1·x + B1·y = C1,
                                    A2·x + B2·y = C2,
    заданной своими коэффициентами A1, B1, C1, A2, B2, C2, если известно, что
    данная система имеет единственное решение. Воспользоваться формулами
                    x = (C1·B2 – C2·B1)/D,     y = (A1·C2 – A2·C1)/D,
                                 где D = A1·B2 – A2·B1.
                                    14



    4    Целые числа: группа Integer
     Все входные и выходные данные в заданиях этой группы являются целыми
числами. Все числа, для которых указано количество цифр (двузначное число,
трехзначное число и т. д.), считаются положительными.
Integer1. Дано расстояние L в сантиметрах. Используя операцию деления наце-
     ло, найти количество полных метров в нем (1 метр = 100 см).
Integer2. Дана масса M в килограммах. Используя операцию деления нацело,
     найти количество полных тонн в ней (1 тонна = 1000 кг).
Integer3°. Дан размер файла в байтах. Используя операцию деления нацело,
     найти количество полных килобайтов, которые занимает данный файл
     (1 килобайт = 1024 байта).
Integer4. Даны целые положительные числа A и B (A > B). На отрезке длины A
     размещено максимально возможное количество отрезков длины B (без на-
     ложений). Используя операцию деления нацело, найти количество отрез-
     ков B, размещенных на отрезке A.
Integer5. Даны целые положительные числа A и B (A > B). На отрезке длины A
     размещено максимально возможное количество отрезков длины B (без на-
     ложений). Используя операцию взятия остатка от деления нацело, найти
     длину незанятой части отрезка A.
Integer6. Дано двузначное число. Вывести вначале его левую цифру (десятки),
     а затем — его правую цифру (единицы). Для нахождения десятков исполь-
     зовать операцию деления нацело, для нахождения единиц — операцию
     взятия остатка от деления.
Integer7. Дано двузначное число. Найти сумму и произведение его цифр.
Integer8°. Дано двузначное число. Вывести число, полученное при перестанов-
     ке цифр исходного числа.
Integer9. Дано трехзначное число. Используя одну операцию деления нацело,
     вывести первую цифру данного числа (сотни).
Integer10. Дано трехзначное число. Вывести вначале его последнюю цифру
     (единицы), а затем — его среднюю цифру (десятки).
Integer11°. Дано трехзначное число. Найти сумму и произведение его цифр.
Integer12. Дано трехзначное число. Вывести число, полученное при прочтении
     исходного числа справа налево.
Integer13. Дано трехзначное число. В нем зачеркнули первую слева цифру и
     приписали ее справа. Вывести полученное число.
Integer14. Дано трехзначное число. В нем зачеркнули первую справа цифру и
     приписали ее слева. Вывести полученное число.
                                     15


Integer15. Дано трехзначное число. Вывести число, полученное при переста-
     новке цифр сотен и десятков исходного числа (например, 123 перейдет
     в 213).
Integer16. Дано трехзначное число. Вывести число, полученное при переста-
     новке цифр десятков и единиц исходного числа (например, 123 перейдет
     в 132).
Integer17. Дано целое число, большее 999. Используя одну операцию деления
     нацело и одну операцию взятия остатка от деления, найти цифру, соответ-
     ствующую разряду сотен в записи этого числа.
Integer18. Дано целое число, большее 999. Используя одну операцию деления
     нацело и одну операцию взятия остатка от деления, найти цифру, соответ-
     ствующую разряду тысяч в записи этого числа.
Integer19. С начала суток прошло N секунд (N — целое). Найти количество
     полных минут, прошедших с начала суток.
Integer20°. С начала суток прошло N секунд (N — целое). Найти количество
     полных часов, прошедших с начала суток.
Integer21. С начала суток прошло N секунд (N — целое). Найти количество се-
     кунд, прошедших с начала последней минуты.
Integer22. С начала суток прошло N секунд (N — целое). Найти количество се-
     кунд, прошедших с начала последнего часа.
Integer23. С начала суток прошло N секунд (N — целое). Найти количество
     полных минут, прошедших с начала последнего часа.
Integer24. Дни недели пронумерованы следующим образом: 0 — воскресенье,
     1 — понедельник, 2 — вторник, …, 6 — суббота. Дано целое число K, ле-
     жащее в диапазоне 1–365. Определить номер дня недели для K-го дня года,
     если известно, что в этом году 1 января было понедельником.
Integer25. Дни недели пронумерованы следующим образом: 0 — воскресенье,
     1 — понедельник, 2 — вторник, …, 6 — суббота. Дано целое число K, ле-
     жащее в диапазоне 1–365. Определить номер дня недели для K-го дня года,
     если известно, что в этом году 1 января было четвергом.
Integer26. Дни недели пронумерованы следующим образом: 1 — понедельник,
     2 — вторник, …, 6 — суббота, 7 — воскресенье. Дано целое число K, ле-
     жащее в диапазоне 1–365. Определить номер дня недели для K-го дня года,
     если известно, что в этом году 1 января было вторником.
Integer27. Дни недели пронумерованы следующим образом: 1 — понедельник,
     2 — вторник, …, 6 — суббота, 7 — воскресенье. Дано целое число K, ле-
     жащее в диапазоне 1–365. Определить номер дня недели для K-го дня года,
     если известно, что в этом году 1 января было субботой.
                                     16


Integer28. Дни недели пронумерованы следующим образом: 1 — понедельник,
     2 — вторник, …, 6 — суббота, 7 — воскресенье. Дано целое число K, ле-
     жащее в диапазоне 1–365, и целое число N, лежащее в диапазоне 1–7. Оп-
     ределить номер дня недели для K-го дня года, если известно, что в этом
     году 1 января было днем недели с номером N.
Integer29°. Даны целые положительные числа A, B, C. На прямоугольнике раз-
     мера A × B размещено максимально возможное количество квадратов со
     стороной C (без наложений). Найти количество квадратов, размещенных
     на прямоугольнике, а также площадь незанятой части прямоугольника.
Integer30. Дан номер некоторого года (целое положительное число). Опреде-
     лить соответствующий ему номер столетия, учитывая, что, к примеру, на-
     чалом 20 столетия был 1901 год.

    5     Логические выражения: группа Boolean
     Во всех заданиях данной группы требуется вывести логическое значение
True, если приведенное высказывание для предложенных исходных данных яв-
ляется истинным, и значение False в противном случае. Все числа, для которых
указано количество цифр (двузначное число, трехзначное число и т. д.), счита-
ются целыми положительными.
Boolean1°. Дано целое число A. Проверить истинность высказывания: «Число
     A является положительным».
Boolean2. Дано целое число A. Проверить истинность высказывания: «Число A
     является нечетным».
Boolean3. Дано целое число A. Проверить истинность высказывания: «Число A
     является четным».
Boolean4. Даны два целых числа: A, B. Проверить истинность высказывания:
     «Справедливы неравенства A > 2 и B ≤ 3».
Boolean5. Даны два целых числа: A, B. Проверить истинность высказывания:
     «Справедливы неравенства A ≥ 0 или B < –2».
Boolean6. Даны три целых числа: A, B, C. Проверить истинность высказыва-
     ния: «Справедливо двойное неравенство A < B < C».
Boolean7°. Даны три целых числа: A, B, C. Проверить истинность высказыва-
     ния: «Число B находится между числами A и C».
Boolean8. Даны два целых числа: A, B. Проверить истинность высказывания:
     «Каждое из чисел A и B нечетное».
Boolean9. Даны два целых числа: A, B. Проверить истинность высказывания:
     «Хотя бы одно из чисел A и B нечетное».
                                    17


Boolean10°. Даны два целых числа: A, B. Проверить истинность высказывания:
    «Ровно одно из чисел A и B нечетное».
Boolean11. Даны два целых числа: A, B. Проверить истинность высказывания:
    «Числа A и B имеют одинаковую четность».
Boolean12. Даны три целых числа: A, B, C. Проверить истинность высказыва-
    ния: «Каждое из чисел A, B, C положительное».
Boolean13. Даны три целых числа: A, B, C. Проверить истинность высказыва-
    ния: «Хотя бы одно из чисел A, B, C положительное».
Boolean14. Даны три целых числа: A, B, C. Проверить истинность высказыва-
    ния: «Ровно одно из чисел A, B, C положительное».
Boolean15. Даны три целых числа: A, B, C. Проверить истинность высказыва-
    ния: «Ровно два из чисел A, B, C являются положительными».
Boolean16. Дано целое положительное число. Проверить истинность высказы-
    вания: «Данное число является четным двузначным».
Boolean17. Дано целое положительное число. Проверить истинность высказы-
    вания: «Данное число является нечетным трехзначным».
Boolean18. Проверить истинность высказывания: «Среди трех данных целых
    чисел есть хотя бы одна пара совпадающих».
Boolean19. Проверить истинность высказывания: «Среди трех данных целых
    чисел есть хотя бы одна пара взаимно противоположных».
Boolean20. Дано трехзначное число. Проверить истинность высказывания:
    «Все цифры данного числа различны».
Boolean21. Дано трехзначное число. Проверить истинность высказывания:
    «Цифры данного числа образуют возрастающую последовательность».
Boolean22. Дано трехзначное число. Проверить истинность высказывания:
    «Цифры данного числа образуют возрастающую или убывающую после-
    довательность».
Boolean23. Дано четырехзначное число. Проверить истинность высказывания:
    «Данное число читается одинаково слева направо и справа налево».
Boolean24. Даны числа A, B, C (число A не равно 0). Рассмотрев дискриминант
    D = B2 – 4·A·C, проверить истинность высказывания: «Квадратное уравне-
    ние A·x2 + B·x + C = 0 имеет вещественные корни».
Boolean25. Даны числа x, y. Проверить истинность высказывания: «Точка с ко-
    ординатами (x, y) лежит во второй координатной четверти».
Boolean26. Даны числа x, y. Проверить истинность высказывания: «Точка с ко-
    ординатами (x, y) лежит в четвертой координатной четверти».
Boolean27. Даны числа x, y. Проверить истинность высказывания: «Точка с ко-
    ординатами (x, y) лежит во второй или третьей координатной четверти».
                                      18


Boolean28. Даны числа x, y. Проверить истинность высказывания: «Точка с ко-
    ординатами (x, y) лежит в первой или третьей координатной четверти».
Boolean29°. Даны числа x, y, x1, y1, x2, y2. Проверить истинность высказывания:
    «Точка с координатами (x, y) лежит внутри прямоугольника, левая верхняя
    вершина которого имеет координаты (x1, y1), правая нижняя — (x2, y2),
    а стороны параллельны координатным осям».
Boolean30. Даны целые числа a, b, c, являющиеся сторонами некоторого тре-
    угольника. Проверить истинность высказывания: «Треугольник со сторо-
    нами a, b, c является равносторонним».
Boolean31. Даны целые числа a, b, c, являющиеся сторонами некоторого тре-
    угольника. Проверить истинность высказывания: «Треугольник со сторо-
    нами a, b, c является равнобедренным».
Boolean32. Даны целые числа a, b, c, являющиеся сторонами некоторого тре-
    угольника. Проверить истинность высказывания: «Треугольник со сторо-
    нами a, b, c является прямоугольным».
Boolean33. Даны целые числа a, b, c. Проверить истинность высказывания:
    «Существует треугольник со сторонами a, b, c».
Boolean34. Даны координаты поля шахматной доски x, y (целые числа, лежа-
    щие в диапазоне 1–8). Учитывая, что левое нижнее поле доски (1, 1) явля-
    ется черным, проверить истинность высказывания: «Данное поле является
    белым».
Boolean35. Даны координаты двух различных полей шахматной доски x1, y1,
    x2, y2 (целые числа, лежащие в диапазоне 1–8). Проверить истинность вы-
    сказывания: «Данные поля имеют одинаковый цвет».
Boolean36. Даны координаты двух различных полей шахматной доски x1, y1,
    x2, y2 (целые числа, лежащие в диапазоне 1–8). Проверить истинность вы-
    сказывания: «Ладья за один ход может перейти с одного поля на другое».
Boolean37. Даны координаты двух различных полей шахматной доски x1, y1,
    x2, y2 (целые числа, лежащие в диапазоне 1–8). Проверить истинность вы-
    сказывания: «Король за один ход может перейти с одного поля на другое».
Boolean38. Даны координаты двух различных полей шахматной доски x1, y1,
    x2, y2 (целые числа, лежащие в диапазоне 1–8). Проверить истинность вы-
    сказывания: «Слон за один ход может перейти с одного поля на другое».
Boolean39. Даны координаты двух различных полей шахматной доски x1, y1,
    x2, y2 (целые числа, лежащие в диапазоне 1–8). Проверить истинность вы-
    сказывания: «Ферзь за один ход может перейти с одного поля на другое».
Boolean40. Даны координаты двух различных полей шахматной доски x1, y1,
    x2, y2 (целые числа, лежащие в диапазоне 1–8). Проверить истинность вы-
    сказывания: «Конь за один ход может перейти с одного поля на другое».
                                     19



    6     Условный оператор: группа If
If1. Дано целое число. Если оно является положительным, то прибавить к не-
      му 1; в противном случае не изменять его. Вывести полученное число.
If2. Дано целое число. Если оно является положительным, то прибавить к не-
      му 1; в противном случае вычесть из него 2. Вывести полученное число.
If3. Дано целое число. Если оно является положительным, то прибавить к не-
      му 1; если отрицательным, то вычесть из него 2; если нулевым, то заме-
      нить его на 10. Вывести полученное число.
If4°. Даны три целых числа. Найти количество положительных чисел в исход-
      ном наборе.
If5. Даны три целых числа. Найти количество положительных и количество от-
      рицательных чисел в исходном наборе.
If6°. Даны два числа. Вывести большее из них.
If7. Даны два числа. Вывести порядковый номер меньшего из них.
If8°. Даны два числа. Вывести вначале большее, а затем меньшее из них.
If9. Даны две переменные вещественного типа: A, B. Перераспределить значе-
      ния данных переменных так, чтобы в A оказалось меньшее из значений,
      а в B — большее. Вывести новые значения переменных A и B.
If10. Даны две переменные целого типа: A и B. Если их значения не равны, то
      присвоить каждой переменной сумму этих значений, а если равны, то при-
      своить переменным нулевые значения. Вывести новые значения перемен-
      ных A и B.
If11. Даны две переменные целого типа: A и B. Если их значения не равны, то
      присвоить каждой переменной большее из этих значений, а если равны, то
      присвоить переменным нулевые значения. Вывести новые значения пере-
      менных A и B.
If12°. Даны три числа. Найти наименьшее из них.
If13. Даны три числа. Найти среднее из них (то есть число, расположенное ме-
      жду наименьшим и наибольшим).
If14. Даны три числа. Вывести вначале наименьшее, а затем наибольшее из дан-
      ных чисел.
If15. Даны три числа. Найти сумму двух наибольших из них.
If16. Даны три переменные вещественного типа: A, B, C. Если их значения упо-
      рядочены по возрастанию, то удвоить их; в противном случае заменить
      значение каждой переменной на противоположное. Вывести новые значе-
      ния переменных A, B, C.
                                      20


If17. Даны три переменные вещественного типа: A, B, C. Если их значения упо-
     рядочены по возрастанию или убыванию, то удвоить их; в противном слу-
     чае заменить значение каждой переменной на противоположное. Вывести
     новые значения переменных A, B, C.
If18. Даны три целых числа, одно из которых отлично от двух других, равных
     между собой. Определить порядковый номер числа, отличного от осталь-
     ных.
If19. Даны четыре целых числа, одно из которых отлично от трех других, рав-
     ных между собой. Определить порядковый номер числа, отличного от ос-
     тальных.
If20. На числовой оси расположены три точки: A, B, C. Определить, какая из
     двух последних точек (B или C) расположена ближе к A, и вывести эту точ-
     ку и ее расстояние от точки A.
If21. Даны целочисленные координаты точки на плоскости. Если точка совпа-
     дает с началом координат, то вывести 0. Если точка не совпадает с началом
     координат, но лежит на оси OX или OY, то вывести соответственно 1 или 2.
     Если точка не лежит на координатных осях, то вывести 3.
If22°. Даны координаты точки, не лежащей на координатных осях OX и OY.
     Определить номер координатной четверти, в которой находится данная
     точка.
If23. Даны целочисленные координаты трех вершин прямоугольника, стороны
     которого параллельны координатным осям. Найти координаты его четвер-
     той вершины.
If24. Для данного вещественного x найти значение следующей функции f, при-
     нимающей вещественные значения:
                                 2·sin(x), если x > 0,
                         f(x) =
                                    6 – x, если x ≤ 0.
If25. Для данного целого x найти значение следующей функции f, принимаю-
     щей значения целого типа:
                               2·x, если x < –2 или x > 2,
                     f(x) =
                             –3·x, в противном случае.
If26°. Для данного вещественного x найти значение следующей функции f, при-
     нимающей вещественные значения:
                                 –x, если x ≤ 0,
                         f(x) =   x2, если 0 < x < 2,
                                   4, если x ≥ 2.
                                     21


If27. Для данного вещественного x найти значение следующей функции f,
     принимающей значения целого типа:
                      0, если x < 0,
              f(x) =  1, если x принадлежит [0, 1), [2, 3), …,
                     –1, если x принадлежит [1, 2), [3, 4), … .
If28. Дан номер года (положительное целое число). Определить количество
     дней в этом году, учитывая, что обычный год насчитывает 365 дней, а ви-
     сокосный — 366 дней. Високосным считается год, делящийся на 4, за ис-
     ключением тех годов, которые делятся на 100 и не делятся на 400 (напри-
     мер, годы 300, 1300 и 1900 не являются високосными, а 1200 и 2000 — яв-
     ляются).
If29. Дано целое число. Вывести его строку-описание вида «отрицательное чет-
     ное число», «нулевое число», «положительное нечетное число» и т. д.
If30. Дано целое число, лежащее в диапазоне 1–999. Вывести его строку-
     описание вида «четное двузначное число», «нечетное трехзначное число»
     и т. д.

    7     Оператор выбора: группа Case
Case1. Дано целое число в диапазоне 1–7. Вывести строку — название дня не-
   дели, соответствующее данному числу (1 — «понедельник», 2 — «втор-
   ник» и т. д.).
Case2. Дано целое число K. Вывести строку-описание оценки, соответствую-
   щей числу K (1 — «плохо», 2 — «неудовлетворительно», 3 — «удовлетво-
   рительно», 4 — «хорошо», 5 — «отлично»). Если K не лежит в диапазоне
   1–5, то вывести строку «ошибка».
Case3. Дан номер месяца — целое число в диапазоне 1–12 (1 — январь, 2 —
   февраль и т. д.). Вывести название соответствующего времени года («зи-
   ма», «весна», «лето», «осень»).
Case4°. Дан номер месяца — целое число в диапазоне 1–12 (1 — январь, 2 —
   февраль и т. д.). Определить количество дней в этом месяце для невисо-
   косного года.
Case5. Арифметические действия над числами пронумерованы следующим
   образом: 1 — сложение, 2 — вычитание, 3 — умножение, 4 — деление.
   Дан номер действия N (целое число в диапазоне 1–4) и вещественные чис-
   ла A и B (В не равно 0). Выполнить над числами указанное действие и вы-
   вести результат.
Case6. Единицы длины пронумерованы следующим образом: 1 — дециметр,
   2 — километр, 3 — метр, 4 — миллиметр, 5 — сантиметр. Дан номер еди-
                                     22


   ницы длины (целое число в диапазоне 1–5) и длина отрезка в этих едини-
   цах (вещественное число). Найти длину отрезка в метрах.
Case7. Единицы массы пронумерованы следующим образом: 1 — килограмм,
   2 — миллиграмм, 3 — грамм, 4 — тонна, 5 — центнер. Дан номер единицы
   массы (целое число в диапазоне 1–5) и масса тела в этих единицах (веще-
   ственное число). Найти массу тела в килограммах.
Case8. Даны два целых числа: D (день) и M (месяц), определяющие правиль-
   ную дату невисокосного года. Вывести значения D и M для даты, предше-
   ствующей указанной.
Case9°. Даны два целых числа: D (день) и M (месяц), определяющие правиль-
   ную дату невисокосного года. Вывести значения D и M для даты, следую-
   щей за указанной.
Case10. Робот может перемещаться в четырех направлениях («С» — север,
   «З» — запад, «Ю» — юг, «В» — восток) и принимать три цифровые ко-
   манды: 0 — продолжать движение, 1 — поворот налево, –1 — поворот на-
   право. Дан символ C — исходное направление робота и целое число N —
   посланная ему команда. Вывести направление робота после выполнения
   полученной команды.
Case11. Локатор ориентирован на одну из сторон света («С» — север, «З» —
   запад, «Ю» — юг, «В» — восток) и может принимать три цифровые ко-
   манды поворота: 1 — поворот налево, –1 — поворот направо, 2 — поворот
   на 180°. Дан символ C — исходная ориентация локатора и целые числа N1
   и N2 — две посланные команды. Вывести ориентацию локатора после
   выполнения этих команд.
Case12. Элементы окружности пронумерованы следующим образом: 1 — ра-
   диус R, 2 — диаметр D = 2·R, 3 — длина L = 2·π·R, 4 — площадь круга
   S = π·R2. Дан номер одного из этих элементов и его значение. Вывести зна-
   чения остальных элементов данной окружности (в том же порядке). В ка-
   честве значения π использовать 3.14.
Case13. Элементы равнобедренного прямоугольного треугольника пронумеро-
   ваны следующим образом: 1 — катет a, 2 — гипотенуза c = a 2 , 3 — вы-
   сота h, опущенная на гипотенузу (h = c/2), 4 — площадь S = c·h/2. Дан но-
   мер одного из этих элементов и его значение. Вывести значения остальных
   элементов данного треугольника (в том же порядке).
Case14. Элементы равностороннего треугольника пронумерованы следующим
   образом: 1 — сторона a, 2 — радиус R1 вписанной окружности (R1 =
   = a 3 / 6 ), 3 — радиус R2 описанной окружности (R2 = 2·R1), 4 — площадь
   S = a 2 3 / 4 . Дан номер одного из этих элементов и его значение. Вывести
   значения остальных элементов данного треугольника (в том же порядке).
                                     23


Case15. Мастям игральных карт присвоены порядковые номера: 1 — пики,
   2 — трефы, 3 — бубны, 4 — червы. Достоинству карт, старших десятки,
   присвоены номера: 11 — валет, 12 — дама, 13 — король, 14 — туз. Даны
   два целых числа: N — достоинство (6 ≤ N ≤ 14) и M — масть карты
   (1 ≤ M ≤ 4). Вывести название соответствующей карты вида «шестерка бу-
   бен», «дама червей», «туз треф» и т. п.
Case16. Дано целое число в диапазоне 20–69, определяющее возраст (в годах).
   Вывести строку-описание указанного возраста, обеспечив правильное со-
   гласование числа со словом «год», например: 20 — «двадцать лет», 32 —
   «тридцать два года», 41 — «сорок один год».
Case17. Дано целое число в диапазоне 10–40, определяющее количество учеб-
   ных заданий по некоторой теме. Вывести строку-описание указанного ко-
   личества заданий, обеспечив правильное согласование числа со словами
   «учебное задание», например: 18 — «восемнадцать учебных заданий»,
   23 — «двадцать три учебных задания», 31 — «тридцать одно учебное за-
   дание».
Case18. Дано целое число в диапазоне 100–999. Вывести строку-описание
   данного числа, например: 256 — «двести пятьдесят шесть», 814 — «во-
   семьсот четырнадцать».
Case19. В восточном календаре принят 60-летний цикл, состоящий из 12-лет-
   них подциклов, обозначаемых названиями цвета: зеленый, красный, жел-
   тый, белый и черный. В каждом подцикле годы носят названия животных:
   крысы, коровы, тигра, зайца, дракона, змеи, лошади, овцы, обезьяны, ку-
   рицы, собаки и свиньи. По номеру года определить его название, если 1984
   год — начало цикла: «год зеленой крысы».
Case20. Даны два целых числа: D (день) и M (месяц), определяющие правиль-
   ную дату. Вывести знак Зодиака, соответствующий этой дате: «Водолей»
   (20.1–18.2), «Рыбы» (19.2–20.3), «Овен» (21.3–19.4), «Телец» (20.4–20.5),
   «Близнецы» (21.5–21.6), «Рак» (22.6–22.7), «Лев» (23.7–22.8), «Дева»
   (23.8–22.9), «Весы» (23.9–22.10), «Скорпион» (23.10–22.11), «Стрелец»
   (23.11–21.12), «Козерог» (22.12–19.1).

    8     Цикл с параметром: группа For
For1. Даны целые числа K и N (N > 0). Вывести N раз число K.
For2. Даны два целых числа A и B (A < B). Вывести в порядке возрастания все
    целые числа, расположенные между A и B (включая сами числа A и B),
    а также количество N этих чисел.
                                     24


For3. Даны два целых числа A и B (A < B). Вывести в порядке убывания все це-
    лые числа, расположенные между A и B (не включая числа A и B), а также
    количество N этих чисел.
For4. Дано вещественное число — цена 1 кг конфет. Вывести стоимость 1,
    2, …, 10 кг конфет.
For5°. Дано вещественное число — цена 1 кг конфет. Вывести стоимость 0.1,
    0.2, …, 1 кг конфет.
For6. Дано вещественное число — цена 1 кг конфет. Вывести стоимость 1.2,
    1.4, …, 2 кг конфет.
For7. Даны два целых числа A и B (A < B). Найти сумму всех целых чисел от A
    до B включительно.
For8. Даны два целых числа A и B (A < B). Найти произведение всех целых чи-
    сел от A до B включительно.
For9. Даны два целых числа A и B (A < B). Найти сумму квадратов всех целых
    чисел от A до B включительно.
For10. Дано целое число N (> 0). Найти сумму
                               1 + 1/2 + 1/3 + … + 1/N
    (вещественное число).
For11. Дано целое число N (> 0). Найти сумму
                         N2 + (N + 1)2 + (N + 2)2 + … + (2·N)2
    (целое число).
For12°. Дано целое число N (> 0). Найти произведение
                                   1.1 · 1.2 · 1.3 · …
    (N сомножителей).
For13°. Дано целое число N (> 0). Найти значение выражения
                                  1.1 – 1.2 + 1.3 – …
    (N слагаемых, знаки чередуются). Условный оператор не использовать.
For14. Дано целое число N (> 0). Найти квадрат данного числа, используя для
    его вычисления следующую формулу:
                            N2 = 1 + 3 + 5 + … + (2·N – 1).
    После добавления к сумме каждого слагаемого выводить текущее значение
    суммы (в результате будут выведены квадраты всех целых чисел от 1
    до N).
For15°. Дано вещественное число A и целое число N (> 0). Найти A в степени N:
                                    AN = A·A· … ·A
    (числа A перемножаются N раз).
For16°. Дано вещественное число A и целое число N (> 0). Используя один
    цикл, вывести все целые степени числа A от 1 до N.
                                      25


For17. Дано вещественное число A и целое число N (> 0). Используя один цикл,
    найти сумму
                              1 + A + A2 + A3 + … + AN.
For18. Дано вещественное число A и целое число N (> 0). Используя один цикл,
    найти значение выражения
                           1 – A + A2 – A3 + … + (–1)N·AN.
    Условный оператор не использовать.
For19°. Дано целое число N (> 0). Найти произведение
                                     N! = 1·2·…·N
    (N–факториал). Чтобы избежать целочисленного переполнения, вычис-
    лять это произведение с помощью вещественной переменной и вывести
    его как вещественное число.
For20°. Дано целое число N (> 0). Используя один цикл, найти сумму
                                 1! + 2! + 3! + … + N!
    (выражение N! — N–факториал — обозначает произведение всех целых
    чисел от 1 до N: N! = 1·2·…·N). Чтобы избежать целочисленного пере-
    полнения, проводить вычисления с помощью вещественных переменных и
    вывести результат как вещественное число.
For21. Дано целое число N (> 0). Используя один цикл, найти сумму
                       1 + 1/(1!) + 1/(2!) + 1/(3!) + … + 1/(N!)
    (выражение N! — N–факториал — обозначает произведение всех целых
    чисел от 1 до N: N! = 1·2·…·N). Полученное число является приближен-
    ным значением константы e = exp(1).
For22. Дано вещественное число X и целое число N (> 0). Найти значение вы-
    ражения
                            1 + X + X2/(2!) + … + XN/(N!)
    (N! = 1·2·…·N). Полученное число является приближенным значением
    функции exp в точке X.
For23. Дано вещественное число X и целое число N (> 0). Найти значение вы-
    ражения
                  X – X3/(3!) + X5/(5!) – … + (–1)N·X2·N+1/((2·N+1)!)
    (N! = 1·2·…·N). Полученное число является приближенным значением
    функции sin в точке X.
For24. Дано вещественное число X и целое число N (> 0). Найти значение вы-
    ражения
                    1 – X2/(2!) + X4/(4!) – … + (–1)N·X2·N/((2·N)!)
    (N! = 1·2·…·N). Полученное число является приближенным значением
    функции cos в точке X.
For25. Дано вещественное число X (|X| < 1) и целое число N (> 0). Найти значе-
    ние выражения
                                      26


                         X – X2/2 + X3/3 – … + (–1)N–1·XN/N.
    Полученное число является приближенным значением функции ln в точке
    1 + X.
For26. Дано вещественное число X (|X| < 1) и целое число N (> 0). Найти значе-
    ние выражения
                     X – X3/3 + X5/5 – … + (–1)N·X2·N+1/(2·N+1).
    Полученное число является приближенным значением функции arctg в
    точке X.
For27. Дано вещественное число X (|X| < 1) и целое число N (> 0). Найти значе-
    ние выражения
                         X + 1·X3/(2·3) + 1·3·X5/(2·4·5) + … +
                    + 1·3·…·(2·N–1)·X2·N+1/(2·4·…·(2·N)·(2·N+1)).
    Полученное число является приближенным значением функции arcsin в
    точке X.
For28. Дано вещественное число X (|X| < 1) и целое число N (> 0). Найти значе-
    ние выражения
                      1 + X/2 – 1·X2/(2·4) + 1·3·X3/(2·4·6) – … +
                      + (–1)N–1·1·3·…·(2·N–3)·XN/(2·4·…·(2·N)).
    Полученное число является приближенным значением функции 1 + X .
For29. Дано целое число N (> 1) и две вещественные точки на числовой оси:
    A, B (A < B). Отрезок [A, B] разбит на N равных отрезков. Вывести H —
    длину каждого отрезка, а также набор точек
                     A, A + H, A + 2·H, A + 3·H, …, B,
    образующий разбиение отрезка [A, B].
For30. Дано целое число N (> 1) и две вещественные точки на числовой оси:
    A, B (A < B). Отрезок [A, B] разбит на N равных отрезков. Вывести H —
    длину каждого отрезка, а также значения функции F(X) = 1 – sin(X) в точ-
    ках, разбивающих отрезок [A, B]:
                    F(A), F(A + H), F(A + 2·H), …, F(B).
For31. Дано целое число N (> 0). Последовательность вещественных чисел AK
    определяется следующим образом:
                     A0 = 2,      AK = 2 + 1/AK–1, K = 1, 2, … .
    Вывести элементы A1, A2, …, AN.
For32. Дано целое число N (> 0). Последовательность вещественных чисел AK
    определяется следующим образом:
                    A0 = 1,      AK = (AK–1 + 1)/K, K = 1, 2, … .
    Вывести элементы A1, A2, …, AN.
For33°. Дано целое число N (> 1). Последовательность чисел Фибоначчи FK
    (целого типа) определяется следующим образом:
                                         27


                  F1 = 1,      F2 = 1,     FK = FK–2 + FK–1, K = 3, 4, … .
    Вывести элементы F1, F2, …, FN.
For34. Дано целое число N (> 1). Последовательность вещественных чисел AK
    определяется следующим образом:
               A1 = 1,      A2 = 2,      AK = (AK–2 + 2·AK–1)/3, K = 3, 4, … .
    Вывести элементы A1, A2, …, AN.
For35. Дано целое число N (> 2). Последовательность целых чисел AK опреде-
    ляется следующим образом:
       A1 = 1,      A2 = 2,      A3 = 3,     AK = AK–1 + AK–2 – 2·AK–3, K = 4, 5, … .
    Вывести элементы A1, A2, …, AN.
     Вложенные циклы
For36°. Даны целые положительные числа N и K. Найти сумму
                                 1K + 2K + … + NK.
    Чтобы избежать целочисленного переполнения, вычислять слагаемые этой
    суммы с помощью вещественной переменной и выводить результат как
    вещественное число.
For37. Дано целое число N (> 0). Найти сумму 11 + 22 + … + NN. Чтобы избе-
    жать целочисленного переполнения, вычислять слагаемые этой суммы с
    помощью вещественной переменной и выводить результат как веществен-
    ное число.
For38. Дано целое число N (> 0). Найти сумму 1N + 2N–1 + … + N1. Чтобы избе-
    жать целочисленного переполнения, вычислять слагаемые этой суммы с
    помощью вещественной переменной и выводить результат как веществен-
    ное число.
For39. Даны целые положительные числа A и B (A < B). Вывести все целые
    числа от A до B включительно; при этом каждое число должно выводиться
    столько раз, каково его значение (например, число 3 выводится 3 раза).
For40. Даны целые числа A и B (A < B). Вывести все целые числа от A до B
    включительно; при этом число A должно выводиться 1 раз, число A + 1
    должно выводиться 2 раза и т. д.

     9     Цикл с условием: группа While
While1°. Даны положительные числа A и B (A > B). На отрезке длины A разме-
    щено максимально возможное количество отрезков длины B (без наложе-
    ний). Не используя операции умножения и деления, найти длину незанятой
    части отрезка A.
While2. Даны положительные числа A и B (A > B). На отрезке длины A разме-
    щено максимально возможное количество отрезков длины B (без наложе-
                                     28


    ний). Не используя операции умножения и деления, найти количество от-
    резков B, размещенных на отрезке A.
While3. Даны целые положительные числа N и K. Используя только операции
    сложения и вычитания, найти частное от деления нацело N на K, а также
    остаток от этого деления.
While4°. Дано целое число N (> 0). Если оно является степенью числа 3, то вы-
    вести True, если не является — вывести False.
While5. Дано целое число N (> 0), являющееся некоторой степенью числа 2:
    N = 2K. Найти целое число K — показатель этой степени.
While6. Дано целое число N (> 0). Найти двойной факториал N:
                               N!! = N·(N–2)·(N–4)·…
    (последний сомножитель равен 2, если N — четное, и 1, если N — нечет-
    ное). Чтобы избежать целочисленного переполнения, вычислять это произ-
    ведение с помощью вещественной переменной и вывести его как вещест-
    венное число.
While7°. Дано целое число N (> 0). Найти наименьшее целое положительное
    число K, квадрат которого превосходит N: K2 > N. Функцию извлечения
    квадратного корня не использовать.
While8. Дано целое число N (> 0). Найти наибольшее целое число K, квадрат
    которого не превосходит N: K2 ≤ N. Функцию извлечения квадратного кор-
    ня не использовать.
While9. Дано целое число N (> 1). Найти наименьшее целое число K, при кото-
    ром выполняется неравенство 3K > N.
While10. Дано целое число N (> 1). Найти наибольшее целое число K, при ко-
    тором выполняется неравенство 3K < N.
While11°. Дано целое число N (> 1). Вывести наименьшее из целых чисел K,
    для которых сумма 1 + 2 + … + K будет больше или равна N, и саму эту
    сумму.
While12°. Дано целое число N (> 1). Вывести наибольшее из целых чисел K, для
    которых сумма 1 + 2 + … + K будет меньше или равна N, и саму эту сумму.
While13. Дано число A (> 1). Вывести наименьшее из целых чисел K, для кото-
    рых сумма 1 + 1/2 + … + 1/K будет больше A, и саму эту сумму.
While14. Дано число A (> 1). Вывести наибольшее из целых чисел K, для кото-
    рых сумма 1 + 1/2 + … + 1/K будет меньше A, и саму эту сумму.
While15. Начальный вклад в банке равен 1000 руб. Через каждый месяц размер
    вклада увеличивается на P процентов от имеющейся суммы (P — вещест-
    венное число, 0 < P < 25). По данному P определить, через сколько меся-
                                     29


    цев размер вклада превысит 1100 руб., и вывести найденное количество
    месяцев K (целое число) и итоговый размер вклада S (вещественное число).
While16. Спортсмен-лыжник начал тренировки, пробежав в первый день 10 км.
    Каждый следующий день он увеличивал длину пробега на P процентов от
    пробега предыдущего дня (P — вещественное, 0 < P < 50). По данному P
    определить, после какого дня суммарный пробег лыжника за все дни пре-
    высит 200 км, и вывести найденное количество дней K (целое) и суммар-
    ный пробег S (вещественное число).
While17. Дано целое число N (> 0). Используя операции деления нацело и взя-
    тия остатка от деления, вывести все его цифры, начиная с самой правой
    (разряда единиц).
While18. Дано целое число N (> 0). Используя операции деления нацело и взя-
    тия остатка от деления, найти количество и сумму его цифр.
While19. Дано целое число N (> 0). Используя операции деления нацело и взя-
    тия остатка от деления, найти число, полученное при прочтении числа N
    справа налево.
While20. Дано целое число N (> 0). С помощью операций деления нацело и взя-
    тия остатка от деления определить, имеется ли в записи числа N цифра «2».
    Если имеется, то вывести True, если нет — вывести False.
While21. Дано целое число N (> 0). С помощью операций деления нацело и взя-
    тия остатка от деления определить, имеются ли в записи числа N нечетные
    цифры. Если имеются, то вывести True, если нет — вывести False.
While22°. Дано целое число N (> 1). Если оно является простым, то есть не
    имеет положительных делителей, кроме 1 и самого себя, то вывести True,
    иначе вывести False.
While23°. Даны целые положительные числа A и B. Найти их наибольший об-
    щий делитель (НОД), используя алгоритм Евклида:
           НОД(A, B) = НОД(B, A mod B), если B ≠ 0;       НОД(A, 0) = A,
    где «mod» обозначает операцию взятия остатка от деления.
While24. Дано целое число N (> 1). Последовательность чисел Фибоначчи FK
    определяется следующим образом:
                F1 = 1,   F2 = 1,    FK = FK–2 + FK–1, K = 3, 4, … .
    Проверить, является ли число N числом Фибоначчи. Если является, то вы-
    вести True, если нет — вывести False.
While25. Дано целое число N (> 1). Найти первое число Фибоначчи, большее N.
    (определение чисел Фибоначчи дано в задании While24).
While26. Дано целое число N (> 1), являющееся числом Фибоначчи: N = FK (оп-
    ределение чисел Фибоначчи дано в задании While24). Найти целые числа
    FK–1 и FK+1 — предыдущее и последующее числа Фибоначчи.
                                     30


While27. Дано целое число N (> 1), являющееся числом Фибоначчи: N = FK (оп-
    ределение чисел Фибоначчи дано в задании While24). Найти целое число K
    — порядковый номер числа Фибоначчи N.
While28. Дано вещественное число ε (> 0). Последовательность вещественных
    чисел AK определяется следующим образом:
                     A1 = 2,    AK = 2 + 1/AK–1, K = 2, 3, … .
    Найти первый из номеров K, для которых выполняется условие
                                  |AK – AK–1| < ε,
    и вывести этот номер, а также числа AK–1 и AK.
While29. Дано вещественное число ε (> 0). Последовательность вещественных
    чисел AK определяется следующим образом:
             A1 = 1,    A2 = 2,    AK = (AK–2 + 2·AK–1)/3, K = 3, 4, … .
    Найти первый из номеров K, для которых выполняется условие
                                  |AK – AK–1| < ε,
    и вывести этот номер, а также числа AK–1 и AK.
While30. Даны положительные числа A, B, C. На прямоугольнике размера A × B
    размещено максимально возможное количество квадратов со стороной C
    (без наложений). Найти количество квадратов, размещенных на прямо-
    угольнике. Операции умножения и деления не использовать.

    10 Последовательности: группа Series
     Во всех заданиях данной группы предполагается, что исходный набор со-
держит ненулевое число элементов (в частности, число N всегда больше нуля).
В заданиях на обработку нескольких наборов чисел (Series29–Series40) количе-
ство наборов K также всегда является ненулевым.
     Для решения заданий из данной группы следует использовать «однопро-
ходные» алгоритмы, позволяющие получить требуемый результат после одно-
кратного просмотра набора исходных данных. Однопроходные алгоритмы об-
ладают важным преимуществом: для них не требуется хранить в памяти одно-
временно весь набор данных, поэтому при программной реализации этих алго-
ритмов можно не использовать массивы.
Series1°. Даны десять вещественных чисел. Найти их сумму.
Series2. Даны десять вещественных чисел. Найти их произведение.
Series3. Даны десять вещественных чисел. Найти их среднее арифметическое.
Series4. Дано целое число N и набор из N вещественных чисел. Вывести сумму
     и произведение чисел из данного набора.
Series5. Дано целое число N и набор из N положительных вещественных чисел.
     Вывести в том же порядке целые части всех чисел из данного набора (как
                                     31


    вещественные числа с нулевой дробной частью), а также сумму всех целых
    частей.
Series6. Дано целое число N и набор из N положительных вещественных чисел.
    Вывести в том же порядке дробные части всех чисел из данного набора
    (как вещественные числа с нулевой целой частью), а также произведение
    всех дробных частей.
Series7. Дано целое число N и набор из N вещественных чисел. Вывести в том
    же порядке округленные значения всех чисел из данного набора (как целые
    числа), а также сумму всех округленных значений.
Series8. Дано целое число N и набор из N целых чисел. Вывести в том же по-
    рядке все четные числа из данного набора и количество K таких чисел.
Series9. Дано целое число N и набор из N целых чисел. Вывести в том же по-
    рядке номера всех нечетных чисел из данного набора и количество K таких
    чисел.
Series10. Дано целое число N и набор из N целых чисел. Если в наборе имеют-
    ся положительные числа, то вывести True; в противном случае вывести
    False.
Series11. Даны целые числа K, N и набор из N целых чисел. Если в наборе
    имеются числа, меньшие K, то вывести True; в противном случае вывести
    False.
Series12. Дан набор ненулевых целых чисел; признак его завершения — чис-
    ло 0. Вывести количество чисел в наборе.
Series13. Дан набор ненулевых целых чисел; признак его завершения — чис-
    ло 0. Вывести сумму всех положительных четных чисел из данного набора.
    Если требуемые числа в наборе отсутствуют, то вывести 0.
Series14. Дано целое число K и набор ненулевых целых чисел; признак его за-
    вершения — число 0. Вывести количество чисел в наборе, меньших K.
Series15°. Дано целое число K и набор ненулевых целых чисел; признак его за-
    вершения — число 0. Вывести номер первого числа в наборе, большего K.
    Если таких чисел нет, то вывести 0.
Series16°. Дано целое число K и набор ненулевых целых чисел; признак его за-
    вершения — число 0. Вывести номер последнего числа в наборе, больше-
    го K. Если таких чисел нет, то вывести 0.
Series17°. Дано вещественное число B, целое число N и набор из N веществен-
    ных чисел, упорядоченных по возрастанию. Вывести элементы набора
    вместе с числом B, сохраняя упорядоченность выводимых чисел.
Series18. Дано целое число N и набор из N целых чисел, упорядоченный по
    возрастанию. Данный набор может содержать одинаковые элементы. Вы-
    вести в том же порядке все различные элементы данного набора.
                                     32


Series19°. Дано целое число N (> 1) и набор из N целых чисел. Вывести те эле-
    менты в наборе, которые меньше своего левого соседа, и количество K та-
    ких элементов.
Series20. Дано целое число N (> 1) и набор из N целых чисел. Вывести те эле-
    менты в наборе, которые меньше своего правого соседа, и количество K
    таких элементов.
Series21°. Дано целое число N (> 1) и набор из N вещественных чисел. Прове-
    рить, образует ли данный набор возрастающую последовательность. Если
    образует, то вывести True, если нет — вывести False.
Series22. Дано целое число N (> 1) и набор из N вещественных чисел. Если
    данный набор образует убывающую последовательность, то вывести 0;
    в противном случае вывести номер первого числа, нарушающего
    закономерность.
Series23. Дано целое число N (> 2) и набор из N вещественных чисел. Набор
    называется пилообразным, если каждый его внутренний элемент либо
    больше, либо меньше обоих своих соседей (то есть является «зубцом»).
    Если данный набор является пилообразным, то вывести 0; в противном
    случае вывести номер первого элемента, не являющегося зубцом.
Series24. Дано целое число N и набор из N целых чисел, содержащий по край-
    ней мере два нуля. Вывести сумму чисел из данного набора, расположен-
    ных между последними двумя нулями (если последние нули идут подряд,
    то вывести 0).
Series25. Дано целое число N и набор из N целых чисел, содержащий по край-
    ней мере два нуля. Вывести сумму чисел из данного набора, расположен-
    ных между первым и последним нулем (если первый и последний нули
    идут подряд, то вывести 0).
    Вложенные циклы
Series26. Даны целые числа K, N и набор из N вещественных чисел: A1, A2, …,
    AN. Вывести K-e степени чисел из данного набора:
                               (A1)K, (A2)K, …, (AN)K.
Series27. Дано целое число N и набор из N вещественных чисел: A1, A2, …, AN.
    Вывести следующие числа:
                           A1, (A2)2, …, (AN–1)N–1, (AN)N.
Series28. Дано целое число N и набор из N вещественных чисел: A1, A2, …, AN.
    Вывести следующие числа:
                           (A1)N, (A2)N–1, …, (AN–1)2, AN.
Series29. Даны целые числа K, N, а также K наборов целых чисел по N элемен-
    тов в каждом наборе. Вывести общую сумму всех элементов, входящих в
    данные наборы.
                                     33


Series30. Даны целые числа K, N, а также K наборов целых чисел по N элемен-
    тов в каждом наборе. Для каждого набора вывести сумму его элементов.
Series31. Даны целые числа K, N, а также K наборов целых чисел по N элемен-
    тов в каждом наборе. Найти количество наборов, содержащих число 2. Ес-
    ли таких наборов нет, то вывести 0.
Series32. Даны целые числа K, N, а также K наборов целых чисел по N элемен-
    тов в каждом наборе. Для каждого набора вывести номер его первого эле-
    мента, равного 2, или число 0, если в данном наборе нет двоек.
Series33. Даны целые числа K, N, а также K наборов целых чисел по N элемен-
    тов в каждом наборе. Для каждого набора вывести номер его последнего
    элемента, равного 2, или число 0, если в данном наборе нет двоек.
Series34. Даны целые числа K, N, а также K наборов целых чисел по N элемен-
    тов в каждом наборе. Для каждого набора выполнить следующее действие:
    если в наборе содержится число 2, то вывести сумму его элементов; если в
    наборе нет двоек, то вывести 0.
Series35. Дано целое число K, а также K наборов ненулевых целых чисел. При-
    знаком завершения каждого набора является число 0. Для каждого набора
    вывести количество его элементов. Вывести также общее количество эле-
    ментов во всех наборах.
Series36. Дано целое число K, а также K наборов ненулевых целых чисел. Ка-
    ждый набор содержит не менее двух элементов, признаком его завершения
    является число 0. Найти количество наборов, элементы которых возраста-
    ют.
Series37. Дано целое число K, а также K наборов ненулевых целых чисел. Ка-
    ждый набор содержит не менее двух элементов, признаком его завершения
    является число 0. Найти количество наборов, элементы которых возраста-
    ют или убывают.
Series38. Дано целое число K, а также K наборов ненулевых целых чисел. Ка-
    ждый набор содержит не менее двух элементов, признаком его завершения
    является число 0. Для каждого набора выполнить следующее действие: ес-
    ли элементы набора возрастают, то вывести 1; если элементы набора убы-
    вают, то вывести –1; если элементы набора не возрастают и не убывают, то
    вывести 0.
Series39. Дано целое число K, а также K наборов ненулевых целых чисел. Ка-
    ждый набор содержит не менее трех элементов, признаком его завершения
    является число 0. Найти количество пилообразных наборов (определение
    пилообразного набора дано в задании Series23).
Series40. Дано целое число K, а также K наборов ненулевых целых чисел. Ка-
    ждый набор содержит не менее трех элементов, признаком его завершения
                                      34


    является число 0. Для каждого набора выполнить следующее действие: ес-
    ли набор является пилообразным (см. задание Series23), то вывести коли-
    чество его элементов; в противном случае вывести номер первого элемен-
    та, который не является зубцом.

    11 Процедуры и функции: группа Proc

    11.1 Процедуры с числовыми параметрами
Proc1. Описать процедуру PowerA3(A, B), вычисляющую третью степень числа
    A и возвращающую ее в переменной B (A — входной, B — выходной пара-
    метр; оба параметра являются вещественными). С помощью этой процеду-
    ры найти третьи степени пяти данных чисел.
Proc2. Описать процедуру PowerA234(A, B, C, D), вычисляющую вторую, тре-
    тью и четвертую степень числа A и возвращающую эти степени соответст-
    венно в переменных B, C и D (A — входной, B, C, D — выходные парамет-
    ры; все параметры являются вещественными). С помощью этой процедуры
    найти вторую, третью и четвертую степень пяти данных чисел.
Proc3. Описать процедуру Mean(X, Y, AMean, GMean), вычисляющую среднее
    арифметическое AMean = (X + Y)/2 и среднее геометрическое GMean =
    = X ⋅ Y двух положительных чисел X и Y (X и Y — входные, AMean
    и GMean — выходные параметры вещественного типа). С помощью этой
    процедуры найти среднее арифметическое и среднее геометрическое для
    пар (A, B), (A, C), (A, D), если даны A, B, C, D.
Proc4°. Описать процедуру TrianglePS(a, P, S), вычисляющую по стороне a
    равностороннего треугольника его периметр P = 3·a и площадь S = a 2 3 / 4
    (a — входной, P и S — выходные параметры; все параметры являются ве-
    щественными). С помощью этой процедуры найти периметры и площади
    трех равносторонних треугольников с данными сторонами.
Proc5. Описать процедуру RectPS(x1, y1, x2, y2, P, S), вычисляющую периметр P
    и площадь S прямоугольника со сторонами, параллельными осям коорди-
    нат, по координатам (x1, y1), (x2, y2) его противоположных вершин (x1, y1,
    x2, y2 — входные, P и S — выходные параметры вещественного типа).
    С помощью этой процедуры найти периметры и площади трех прямо-
    угольников с данными противоположными вершинами.
Proc6. Описать процедуру DigitCountSum(K, C, S), находящую количество C
    цифр целого положительного числа K, а также их сумму S (K — входной,
    C и S — выходные параметры целого типа). С помощью этой процедуры
    найти количество и сумму цифр для каждого из пяти данных целых чисел.
                                     35


Proc7. Описать процедуру InvDigits(K), меняющую порядок следования цифр
    целого положительного числа K на обратный (K — параметр целого типа,
    являющийся одновременно входным и выходным). С помощью этой про-
    цедуры поменять порядок следования цифр на обратный для каждого из
    пяти данных целых чисел.
Proc8°. Описать процедуру AddRightDigit(D, K), добавляющую к целому поло-
    жительному числу K справа цифру D (D — входной параметр целого типа,
    лежащий в диапазоне 0–9, K — параметр целого типа, являющийся одно-
    временно входным и выходным). С помощью этой процедуры последова-
    тельно добавить к данному числу K справа данные цифры D1 и D2, выводя
    результат каждого добавления.
Proc9. Описать процедуру AddLeftDigit(D, K), добавляющую к целому положи-
    тельному числу K слева цифру D (D — входной параметр целого типа, ле-
    жащий в диапазоне 1–9, K — параметр целого типа, являющийся одновре-
    менно входным и выходным). С помощью этой процедуры последователь-
    но добавить к данному числу K слева данные цифры D1 и D2, выводя ре-
    зультат каждого добавления.
Proc10. Описать процедуру Swap(X, Y), меняющую содержимое переменных X
    и Y (X и Y — вещественные параметры, являющиеся одновременно вход-
    ными и выходными). С ее помощью для данных переменных A, B, C, D по-
    следовательно поменять содержимое следующих пар: A и B, C и D, B и C
    и вывести новые значения A, B, C, D.
Proc11. Описать процедуру Minmax(X, Y), записывающую в переменную X ми-
    нимальное из значений X и Y, а в переменную Y — максимальное из этих
    значений (X и Y — вещественные параметры, являющиеся одновременно
    входными и выходными). Используя четыре вызова этой процедуры, найти
    минимальное     и    максимальное      из    данных    чисел   A,     B,
    C, D.
Proc12. Описать процедуру SortInc3(A, B, C), меняющую содержимое перемен-
    ных A, B, C таким образом, чтобы их значения оказались упорядоченными
    по возрастанию (A, B, C — вещественные параметры, являющиеся одно-
    временно входными и выходными). С помощью этой процедуры упорядо-
    чить по возрастанию два данных набора из трех чисел: (A1, B1, C1) и (A2,
    B2, C2).
Proc13. Описать процедуру SortDec3(A, B, C), меняющую содержимое пере-
    менных A, B, C таким образом, чтобы их значения оказались упорядочен-
    ными по убыванию (A, B, C — вещественные параметры, являющиеся од-
    новременно входными и выходными). С помощью этой процедуры упоря-
    дочить по убыванию два данных набора из трех чисел: (A1, B1, C1) и (A2,
    B2, C2).
                                     36


Proc14. Описать процедуру ShiftRight3(A, B, C), выполняющую правый цикли-
    ческий сдвиг: значение A переходит в B, значение B — в C, значение C —
    в A (A, B, C — вещественные параметры, являющиеся одновременно вход-
    ными и выходными). С помощью этой процедуры выполнить правый цик-
    лический сдвиг для двух данных наборов из трех чисел: (A1, B1, C1) и (A2,
    B2, C2).
Proc15. Описать процедуру ShiftLeft3(A, B, C), выполняющую левый цикличе-
    ский сдвиг: значение A переходит в C, значение C — в B, значение B — в A
    (A, B, C — вещественные параметры, являющиеся одновременно входны-
    ми и выходными). С помощью этой процедуры выполнить левый цикличе-
    ский сдвиг для двух данных наборов из трех чисел: (A1, B1, C1) и (A2,
    B2, C2).

    11.2 Функции с числовыми параметрами
Proc16. Описать функцию Sign(X) целого типа, возвращающую для веществен-
    ного числа X следующие значения:
              –1, если X < 0;     0, если X = 0;     1, если X > 0.
    С помощью этой функции найти значение выражения Sign(A) + Sign(B) для
    данных вещественных чисел A и B.
Proc17. Описать функцию RootCount(A, B, C) целого типа, определяющую ко-
    личество корней квадратного уравнения A·x2 + B·x + C = 0 (A, B, C — веще-
    ственные параметры, A ≠ 0). С ее помощью найти количество корней для
    каждого из трех квадратных уравнений с данными коэффициентами. Ко-
    личество корней определять по значению дискриминанта: D = B2 – 4·A·C.
Proc18. Описать функцию CircleS(R) вещественного типа, находящую площадь
    круга радиуса R (R — вещественное). С помощью этой функции найти
    площади трех кругов с данными радиусами. Площадь круга радиуса R вы-
    числяется по формуле S = π·R2. В качестве значения π использовать 3.14.
Proc19. Описать функцию RingS(R1, R2) вещественного типа, находящую пло-
    щадь кольца, заключенного между двумя окружностями с общим центром
    и радиусами R1 и R2 (R1 и R2 — вещественные, R1 > R2). С ее помощью най-
    ти площади трех колец, для которых даны внешние и внутренние радиусы.
    Воспользоваться формулой площади круга радиуса R: S = π·R2. В качестве
    значения π использовать 3.14.
Proc20. Описать функцию TriangleP(a, h), находящую периметр равнобедрен-
    ного треугольника по его основанию a и высоте h, проведенной к основа-
    нию (a и h — вещественные). С помощью этой функции найти периметры
    трех треугольников, для которых даны основания и высоты. Для нахожде-
    ния боковой стороны b треугольника использовать теорему Пифагора:
                                  b2 = (a/2)2 + h2.
                                      37


Proc21. Описать функцию SumRange(A, B) целого типа, находящую сумму всех
    целых чисел от A до B включительно (A и B — целые). Если A > B, то
    функция возвращает 0. С помощью этой функции найти суммы чисел от A
    до B и от B до C, если даны числа A, B, C.
Proc22. Описать функцию Calc(A, B, Op) вещественного типа, выполняющую
    над ненулевыми вещественными числами A и B одну из арифметических
    операций и возвращающую ее результат. Вид операции определяется це-
    лым параметром Op: 1 — вычитание, 2 — умножение, 3 — деление, ос-
    тальные значения — сложение. С помощью Calc выполнить для данных A
    и B операции, определяемые данными целыми N1, N2, N3.
Proc23. Описать функцию Quarter(x, y) целого типа, определяющую номер ко-
    ординатной четверти, в которой находится точка с ненулевыми вещест-
    венными координатами (x, y). С помощью этой функции найти номера ко-
    ординатных четвертей для трех точек с данными ненулевыми координата-
    ми.
Proc24. Описать функцию Even(K) логического типа, возвращающую True, ес-
    ли целый параметр K является четным, и False в противном случае. С ее
    помощью найти количество четных чисел в наборе из 10 целых чисел.
Proc25. Описать функцию IsSquare(K) логического типа, возвращающую True,
    если целый параметр K (> 0) является квадратом некоторого целого числа,
    и False в противном случае. С ее помощью найти количество квадратов в
    наборе из 10 целых положительных чисел.
Proc26. Описать функцию IsPower5(K) логического типа, возвращающую True,
    если целый параметр K (> 0) является степенью числа 5, и False в против-
    ном случае. С ее помощью найти количество степеней числа 5 в наборе из
    10 целых положительных чисел.
Proc27. Описать функцию IsPowerN(K, N) логического типа, возвращающую
    True, если целый параметр K (> 0) является степенью числа N (> 1), и False
    в противном случае. Дано число N (> 1) и набор из 10 целых положитель-
    ных чисел. С помощью функции IsPowerN найти количество степеней чис-
    ла N в данном наборе.
Proc28. Описать функцию IsPrime(N) логического типа, возвращающую True,
    если целый параметр N (> 1) является простым числом, и False в против-
    ном случае (число, большее 1, называется простым, если оно не имеет по-
    ложительных делителей, кроме 1 и самого себя). Дан набор из 10 целых
    чисел, больших 1. С помощью функции IsPrime найти количество простых
    чисел в данном наборе.
Proc29. Описать функцию DigitCount(K) целого типа, находящую количество
    цифр целого положительного числа K. Используя эту функцию, найти ко-
    личество цифр для каждого из пяти данных целых положительных чисел.
                                    38


Proc30. Описать функцию DigitN(K, N) целого типа, возвращающую N-ю циф-
    ру целого положительного числа K (цифры в числе нумеруются справа на-
    лево). Если количество цифр в числе K меньше N, то функция возвращает
    –1. Для каждого из пяти данных целых положительных чисел K1, K2, …, K5
    вызвать функцию DigitN с параметром N, изменяющимся от 1 до 5.
Proc31. Описать функцию IsPalindrome(K), возвращающую True, если целый
    параметр K (> 0) является палиндромом (то есть его запись читается оди-
    наково слева направо и справа налево), и False в противном случае. С ее
    помощью найти количество палиндромов в наборе из 10 целых положи-
    тельных чисел. При описании функции можно использовать функции
    DigitCount и DigitN из заданий Proc29 и Proc30.
Proc32. Описать функцию DegToRad(D) вещественного типа, находящую ве-
    личину угла в радианах, если дана его величина D в градусах (D — веще-
    ственное число, 0 < D < 360). Воспользоваться следующим соотношением:
    180° = π радианов. В качестве значения π использовать 3.14. С помощью
    функции DegToRad перевести из градусов в радианы пять данных углов.
Proc33. Описать функцию RadToDeg(R) вещественного типа, находящую вели-
    чину угла в градусах, если дана его величина R в радианах (R — вещест-
    венное число, 0 < R < 2·π). Воспользоваться следующим соотношением:
    180° = π радианов. В качестве значения π использовать 3.14. С помощью
    функции RadToDeg перевести из радианов в градусы пять данных углов.
Proc34. Описать функцию Fact(N) вещественного типа, вычисляющую значе-
    ние факториала N! = 1·2·…·N (N > 0 — параметр целого типа; веществен-
    ное возвращаемое значение используется для того, чтобы избежать цело-
    численного переполнения при больших значениях N). С помощью этой
    функции найти факториалы пяти данных целых чисел.
Proc35. Описать функцию Fact2(N) вещественного типа, вычисляющую двой-
    ной факториал:
        N!! = 1·3·5·…·N, если N — нечетное;
        N!! = 2·4·6·…·N, если N — четное
    (N > 0 — параметр целого типа; вещественное возвращаемое значение ис-
    пользуется для того, чтобы избежать целочисленного переполнения при
    больших значениях N). С помощью этой функции найти двойные факториалы
    пяти данных целых чисел.
Proc36. Описать функцию Fib(N) целого типа, вычисляющую N-й элемент по-
    следовательности чисел Фибоначчи FK, которая описывается следующими
    формулами:
                F1 = 1,    F2 = 1,   FK = FK–2 + FK–1, K = 3, 4, … .
    Используя функцию Fib, найти пять чисел Фибоначчи с данными номера-
    ми N1, N2, …, N5.
                                       39


    11.3 Дополнительные задания на процедуры и функции
Proc37. Описать функцию Power1(A, B) вещественного типа, находящую вели-
    чину AB по формуле AB = exp(B·ln(A)) (параметры A и B — вещественные).
    В случае нулевого или отрицательного параметра A функция возвращает 0.
    С помощью этой функции найти степени AP, BP, CP, если даны числа P, A,
    B, C.
Proc38. Описать функцию Power2(A, N) вещественного типа, находящую вели-
    чину AN (A — вещественный, N — целый параметр) по следующим форму-
    лам:
         A0 = 1;
         AN = A·A·…·A (N сомножителей), если N > 0;
         AN = 1/(A·A·…·A) (|N| сомножителей), если N < 0.
    С помощью этой функции найти AK, AL, AM, если даны числа A, K, L, M.
Proc39. Используя функции Power1 и Power2 (задания Proc37 и Proc38), опи-
    сать функцию Power3(A, B) вещественного типа с вещественными пара-
    метрами, находящую AB следующим образом: если B имеет нулевую дроб-
    ную часть, то вызывается функция Power2(A, N), где N — переменная цело-
    го типа, равная числу B; иначе вызывается Power1(A, B). С помощью этой
    функции найти AP, BP, CP, если даны числа P, A, B, C.
Proc40. Описать функцию Exp1(x, ε) вещественного типа (параметры x, ε —
    вещественные, ε > 0), находящую приближенное значение функции exp(x):
                    exp(x) = 1 + x + x2/(2!) + x3/(3!) + … + xn/(n!) + …
    (n! = 1·2·…·n). В сумме учитывать все слагаемые, большие ε. С помощью
    Exp1 найти приближенное значение экспоненты для данного x при шести
    данных ε.
Proc41. Описать функцию Sin1(x, ε) вещественного типа (параметры x, ε —
    вещественные, ε > 0), находящую приближенное значение функции sin(x):
              sin(x) = x – x3/(3!) + x5/(5!) – … + (–1)n·x2·n+1/((2·n+1)!) + … .
    В сумме учитывать все слагаемые, модуль которых больше ε. С помощью
    Sin1 найти приближенное значение синуса для данного x при шести дан-
    ных ε.
Proc42. Описать функцию Cos1(x, ε) вещественного типа (параметры x, ε —
    вещественные, ε > 0), находящую приближенное значение функции cos(x):
                cos(x) = 1 – x2/(2!) + x4/(4!) – … + (–1)n·x2·n/((2·n)!) + … .
    В сумме учитывать все слагаемые, модуль которых больше ε. С помощью
    Cos1 найти приближенное значение косинуса для данного x при шести дан-
    ных ε.
                                       40


Proc43. Описать функцию Ln1(x, ε) вещественного типа (параметры x, ε —
    вещественные, |x| < 1, ε > 0), находящую приближенное значение функции
    ln(1 + x):
                   ln(1 + x) = x – x2/2 + x3/3 – … + (–1)n·xn+1/(n+1) + … .
    В сумме учитывать все слагаемые, модуль которых больше ε. С помощью
    Ln1 найти приближенное значение ln(1 + x) для данного x при шести дан-
    ных ε.
Proc44. Описать функцию Arctg1(x, ε) вещественного типа (параметры x, ε —
    вещественные, |x| < 1, ε > 0), находящую приближенное значение функции
    arctg(x):
                 arctg(x) = x – x3/3 + x5/5 – … + (–1)n·x2·n+1/(2·n+1) + … .
    В сумме учитывать все слагаемые, модуль которых больше ε. С помощью
    Arctg1 найти приближенное значение arctg(x) для данного x при шести дан-
    ных ε.
Proc45. Описать функцию Power4(x, a, ε) вещественного типа (параметры x, a,
    ε — вещественные, |x| < 1; a, ε > 0), находящую приближенное значение
    функции (1 + x)a:
       (1 + x)a = 1 + a·x + a·(a–1)·x2/(2!) + … + a·(a–1)·…·(a–n+1)·xn/(n!) + … .
    В сумме учитывать все слагаемые, модуль которых больше ε. С помощью
    Power4 найти приближенное значение (1 + x)a для данных x и a при шести
    данных ε.
Proc46. Описать функцию GCD2(A, B) целого типа, находящую наибольший
    общий делитель (НОД, greatest common divisor) двух целых положитель-
    ных чисел A и B, используя алгоритм Евклида:
           НОД(A, B) = НОД(B, A mod B), если B ≠ 0;                НОД(A, 0) = A,
    где «mod» обозначает операцию взятия остатка от деления. С помощью
    GCD2 найти наибольшие общие делители пар (A, B), (A, C), (A, D), если
    даны числа A, B, C, D.
Proc47. Используя функцию GCD2 из задания Proc46, описать процедуру
    Frac1(a, b, p, q), преобразующую дробь a/b к несократимому виду p/q (все
    параметры процедуры — целого типа, a и b — входные, p и q — выход-
    ные). Знак результирующей дроби p/q приписывается числителю (то есть
    q > 0). С помощью Frac1 найти несократимые дроби, равные a/b + c/d,
    a/b + e/f, a/b + g/h (числа a, b, c, d, e, f, g, h даны).
Proc48. Наименьшее общее кратное (least common multiple) двух целых поло-
    жительных чисел A и B равно A·(B/НОД(A, B)), где НОД(A, B) — наиболь-
    ший общий делитель A и B. Используя функцию GCD2 (см. Proc46), опи-
    сать функцию LCM2(A, B) целого типа, находящую наименьшее общее
                                     41


    кратное чисел A и B. С помощью LCM2 найти наименьшие общие кратные
    пар (A, B), (A, C), (A, D), если даны числа A, B, C, D.
Proc49. Учитывая соотношение НОД(A, B, C) = НОД(НОД(A, B), C) и исполь-
    зуя функцию GCD2 (см. Proc46), описать функцию GCD3(A, B, C) целого
    типа, находящую наибольший общий делитель трех целых положительных
    чисел A, B, C. С помощью GCD3 найти наибольшие общие делители троек
    (A, B, C), (A, C, D) и (B, C, D), если даны числа A, B, C, D.
Proc50. Описать процедуру TimeToHMS(T, H, M, S), определяющую по време-
    ни T (в секундах) содержащееся в нем количество часов H, минут M и се-
    кунд S (T — входной, H, M и S — выходные параметры целого типа). Ис-
    пользуя эту процедуру, найти количество часов, минут и секунд для пяти
    данных отрезков времени T1, T2, …, T5.
Proc51. Описать процедуру IncTime(H, M, S, T), которая увеличивает на T се-
    кунд время, заданное в часах H, минутах M и секундах S (H, M и S — вход-
    ные и выходные параметры, T — входной параметр; все параметры — це-
    лые положительные). Дано время (в часах H, минутах M, секундах S) и це-
    лое число T. Используя процедуру IncTime, увеличить данное время на T
    секунд и вывести новые значения H, M, S.
Proc52. Описать функцию IsLeapYear(Y) логического типа, которая возвращает
    True, если год Y (целое положительное число) является високосным, и
    False в противном случае. Вывести значение функции IsLeapYear для пяти
    данных значений параметра Y. Високосным считается год, делящийся на 4,
    за исключением тех годов, которые делятся на 100 и не делятся на 400.
Proc53. Используя функцию IsLeapYear из задания Proc52, описать функцию
    MonthDays(M, Y) целого типа, которая возвращает количество дней для
    M-го месяца года Y (1 ≤ M ≤ 12, Y > 0 — целые числа). Вывести значение
    функции MonthDays для данного года Y и месяцев M1, M2, M3.
Proc54. Используя функцию MonthDays из задания Proc53, описать процедуру
    PrevDate(D, M, Y), которая по информации о правильной дате, включаю-
    щей день D, номер месяца M и год Y, определяет предыдущую дату (пара-
    метры целого типа D, M, Y являются одновременно входными и выходны-
    ми). Применить процедуру PrevDate к трем исходным датам и вывести по-
    лученные значения предыдущих дат.
Proc55. Используя функцию MonthDays из задания Proc53, описать процедуру
    NextDate(D, M, Y), которая по информации о правильной дате, включаю-
    щей день D, номер месяца M и год Y, определяет следующую дату (пара-
    метры целого типа D, M, Y являются одновременно входными и выходны-
    ми). Применить процедуру NextDate к трем исходным датам и вывести по-
    лученные значения следующих дат.
                                        42


Proc56. Описать функцию Leng(xA, yA, xB, yB) вещественного типа, находящую
    длину отрезка AB на плоскости по координатам его концов:
                               |AB| = ( x A − xB ) 2 + ( y A − yB ) 2
    (xA, yA, xB, yB — вещественные параметры). С помощью этой функции най-
    ти длины отрезков AB, AC, AD, если даны координаты точек A, B, C, D.
Proc57. Используя функцию Leng из задания Proc56, описать функцию
    Perim(xA, yA, xB, yB, xC, yC) вещественного типа, находящую периметр тре-
    угольника ABC по координатам его вершин (xA, yA, xB, yB, xC, yC — вещест-
    венные параметры). С помощью этой функции найти периметры треуголь-
    ников ABC, ABD, ACD, если даны координаты точек A, B, C, D.
Proc58. Используя функции Leng и Perim из заданий Proc56 и Proc57, описать
    функцию Area(xA, yA, xB, yB, xC, yC) вещественного типа, находящую пло-
    щадь треугольника ABC по формуле
                       SABC = p ⋅ ( p − AB ) ⋅ ( p − AC ) ⋅ ( p − BC ),
    где p — полупериметр. С помощью этой функции найти площади тре-
    угольников ABC, ABD, ACD, если даны координаты точек A, B, C, D.
Proc59. Используя функции Leng и Area из заданий Proc56 и Proc58, описать
    функцию Dist(xP, yP, xA, yA, xB, yB) вещественного типа, находящую рас-
    стояние D(P, AB) от точки P до прямой AB по формуле
                                    D(P, AB) = 2·SPAB/|AB|,
    где SPAB — площадь треугольника PAB. С помощью этой функции найти
    расстояния от точки P до прямых AB, AC, BC, если даны координаты точек
    P, A, B, C.
Proc60. Используя функцию Dist из задания Proc59, описать процедуру Alti-
    tudes(xA, yA, xB, yB, xC, yC, hA, hB, hC), находящую высоты hA, hB, hC треуголь-
    ника ABC (выходные параметры), проведенные соответственно из вершин
    A, B, C (их координаты являются входными параметрами). С помощью
    этой процедуры найти высоты треугольников ABC, ABD, ACD, если даны
    координаты точек A, B, C, D.
                                                             43




                                                 Содержание
Предисловие................................................................................................................. 3
1. Обзор групп заданий ............................................................................................... 5
2. Общие замечания о формулировках заданий....................................................... 7
3. Ввод и вывод данных, оператор присваивания: группа Begin ......................... 10
4. Целые числа: группа Integer ................................................................................. 14
5. Логические выражения: группа Boolean............................................................. 16
6. Условный оператор: группа If.............................................................................. 19
7. Оператор выбора: группа Case............................................................................. 21
8. Цикл с параметром: группа For............................................................................ 23
9. Цикл с условием: группа While ........................................................................... 27
10. Последовательности: группа Series ................................................................... 30
11. Процедуры и функции: группа Proc .................................................................. 34
   11.1. Процедуры с числовыми параметрами.................................................................34
   11.2. Функции с числовыми параметрами.....................................................................36
   11.3. Дополнительные задания на процедуры и функции ...........................................39
